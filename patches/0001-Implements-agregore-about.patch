From aedcfc7642223a57333aebf80a35bd9ff29be2ff Mon Sep 17 00:00:00 2001
From: mauve <ranger@mauve.moe>
Date: Wed, 30 Mar 2022 16:41:57 -0400
Subject: [PATCH 1/1] Implements agregore://about

---
 chrome/browser/browser_about_handler.cc       | 19 +++++++++++++++++--
 .../browser/chrome_content_browser_client.cc  |  1 +
 chrome/browser/profiles/profile_io_data.cc    |  1 +
 chrome/common/webui_url_constants.cc          |  1 +
 chrome/common/webui_url_constants.h           |  1 +
 content/common/url_schemes.cc                 |  3 +++
 content/public/common/url_constants.cc        |  1 +
 content/public/common/url_constants.h         |  1 +
 8 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/chrome/browser/browser_about_handler.cc b/chrome/browser/browser_about_handler.cc
index 9e534ff1683f1..db36219ded278 100644
--- a/chrome/browser/browser_about_handler.cc
+++ b/chrome/browser/browser_about_handler.cc
@@ -32,11 +32,26 @@ bool HandleChromeAboutAndChromeSyncRewrite(
   DCHECK(url->IsAboutBlank() || url->IsAboutSrcdoc() ||
          !url->SchemeIs(url::kAboutScheme));
 
-  // Only handle chrome: URLs.
-  if (!url->SchemeIs(content::kChromeUIScheme))
+  // Only handle chrome: and agregore: URLs.
+  if (!(url->SchemeIs(content::kChromeUIScheme) ||
+      url->SchemeIs(content::kAgregoreUIScheme)))
     return false;
 
   std::string host(url->host());
+  std::string scheme(url->scheme());
+
+  // Handle Agregore URLs
+  if (scheme == content::kAgregoreUIScheme) {
+    if (host == chrome::kChromeUIAboutHost) {
+      GURL::Replacements replacements;
+      replacements.SetSchemeStr(url::kHttpsScheme);
+      replacements.SetHostStr(chrome::kAgregoreURLHost);
+      *url = url->ReplaceComponents(replacements);
+    }
+
+    return false;
+  }
+
   if (host == chrome::kChromeUIAboutHost) {
     // Replace chrome://about with chrome://chrome-urls.
     host = chrome::kChromeUIChromeURLsHost;
diff --git a/chrome/browser/chrome_content_browser_client.cc b/chrome/browser/chrome_content_browser_client.cc
index bcdb4eef39a85..73199b6149c8c 100644
--- a/chrome/browser/chrome_content_browser_client.cc
+++ b/chrome/browser/chrome_content_browser_client.cc
@@ -33,6 +33,7 @@
 #include "chrome/browser/after_startup_task_utils.h"
 #include "chrome/browser/bluetooth/chrome_bluetooth_delegate_impl_client.h"
 #include "chrome/browser/browser_about_handler.h"
+#include "chrome/browser/agregore_handler.h"
 #include "chrome/browser/browser_features.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/captive_portal/captive_portal_service_factory.h"
diff --git a/chrome/browser/profiles/profile_io_data.cc b/chrome/browser/profiles/profile_io_data.cc
index 242c2e3f1fdd1..5eeea967a49ab 100644
--- a/chrome/browser/profiles/profile_io_data.cc
+++ b/chrome/browser/profiles/profile_io_data.cc
@@ -37,6 +37,7 @@ bool ProfileIOData::IsHandledProtocol(const std::string& scheme) {
     extensions::kExtensionScheme,
 #endif
     content::kChromeUIScheme,
+    content::kAgregoreUIScheme,
     content::kChromeUIUntrustedScheme,
     url::kDataScheme,
 #if BUILDFLAG(IS_CHROMEOS_ASH)
diff --git a/chrome/common/webui_url_constants.cc b/chrome/common/webui_url_constants.cc
index 5d820781128e1..e179f42c1901f 100644
--- a/chrome/common/webui_url_constants.cc
+++ b/chrome/common/webui_url_constants.cc
@@ -20,6 +20,7 @@ namespace chrome {
 // Note: Add hosts to |kChromeHostURLs| at the bottom of this file to be listed
 // by chrome://chrome-urls (about:about) and the built-in AutocompleteProvider.
 
+const char kAgregoreURLHost[] = "agregore.mauve.moe";
 const char kChromeUIAboutHost[] = "about";
 const char kChromeUIAboutURL[] = "chrome://about/";
 const char kChromeUIActivateSafetyCheckSettingsURL[] =
diff --git a/chrome/common/webui_url_constants.h b/chrome/common/webui_url_constants.h
index 740b5cf5565c1..91565caf98d8a 100644
--- a/chrome/common/webui_url_constants.h
+++ b/chrome/common/webui_url_constants.h
@@ -27,6 +27,7 @@ namespace chrome {
 // Not all components have corresponding URLs and vice versa. Only add as
 // needed.
 // Please keep in alphabetical order, with OS/feature specific sections below.
+extern const char kAgregoreURLHost[];
 extern const char kChromeUIAboutHost[];
 extern const char kChromeUIAboutURL[];
 extern const char kChromeUIActivateSafetyCheckSettingsURL[];
diff --git a/content/common/url_schemes.cc b/content/common/url_schemes.cc
index e59440185a5fe..f1071a52e83bf 100644
--- a/content/common/url_schemes.cc
+++ b/content/common/url_schemes.cc
@@ -29,6 +29,7 @@ const char* const kDefaultSavableSchemes[] = {
   url::kFileSystemScheme,
   kChromeDevToolsScheme,
   kChromeUIScheme,
+  kAgregoreUIScheme,
   url::kDataScheme
 };
 
@@ -59,6 +60,7 @@ void RegisterContentSchemes(bool should_lock_registry) {
 
   url::AddStandardScheme(kChromeDevToolsScheme, url::SCHEME_WITH_HOST);
   url::AddStandardScheme(kChromeUIScheme, url::SCHEME_WITH_HOST);
+  url::AddStandardScheme(kAgregoreUIScheme, url::SCHEME_WITH_HOST);
   url::AddStandardScheme(kChromeUIUntrustedScheme, url::SCHEME_WITH_HOST);
   url::AddStandardScheme(kGuestScheme, url::SCHEME_WITH_HOST);
   url::AddStandardScheme(kChromeErrorScheme, url::SCHEME_WITH_HOST);
@@ -71,6 +73,7 @@ void RegisterContentSchemes(bool should_lock_registry) {
 
   schemes.secure_schemes.push_back(kChromeDevToolsScheme);
   schemes.secure_schemes.push_back(kChromeUIScheme);
+  schemes.secure_schemes.push_back(kAgregoreUIScheme);
   schemes.secure_schemes.push_back(kChromeUIUntrustedScheme);
   schemes.secure_schemes.push_back(kChromeErrorScheme);
   for (auto& scheme : schemes.secure_schemes)
diff --git a/content/public/common/url_constants.cc b/content/public/common/url_constants.cc
index 6122c0beac3d0..95c2489cd1ba0 100644
--- a/content/public/common/url_constants.cc
+++ b/content/public/common/url_constants.cc
@@ -14,6 +14,7 @@ namespace content {
 const char kChromeDevToolsScheme[] = "devtools";
 const char kChromeErrorScheme[] = "chrome-error";
 const char kChromeUIScheme[] = "chrome";
+const char kAgregoreUIScheme[] = "agregore";
 const char kChromeUIUntrustedScheme[] = "chrome-untrusted";
 const char kGuestScheme[] = "chrome-guest";
 const char kViewSourceScheme[] = "view-source";
diff --git a/content/public/common/url_constants.h b/content/public/common/url_constants.h
index 587304b973f50..c2bf9d1939926 100644
--- a/content/public/common/url_constants.h
+++ b/content/public/common/url_constants.h
@@ -20,6 +20,7 @@ namespace content {
 CONTENT_EXPORT extern const char kChromeDevToolsScheme[];
 CONTENT_EXPORT extern const char kChromeErrorScheme[];
 CONTENT_EXPORT extern const char kChromeUIScheme[];  // Used for WebUIs.
+CONTENT_EXPORT extern const char kAgregoreUIScheme[];
 CONTENT_EXPORT extern const char kChromeUIUntrustedScheme[];
 CONTENT_EXPORT extern const char kGuestScheme[];
 CONTENT_EXPORT extern const char kViewSourceScheme[];
-- 
2.25.1

