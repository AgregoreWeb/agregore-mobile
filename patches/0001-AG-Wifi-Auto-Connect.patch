From 97a487b7497190aff8809f604f81c70c53d19ff2 Mon Sep 17 00:00:00 2001
From: mauve <ranger@mauve.moe>
Date: Sat, 23 Apr 2022 01:34:51 -0400
Subject: [PATCH] AG Wifi Auto Connect

---
 .gitignore                                    |   2 +
 chrome/android/BUILD.gn                       |   3 +-
 chrome/android/chrome_java_resources.gni      |   1 +
 chrome/android/chrome_public_apk_tmpl.gni     |   5 +-
 chrome/android/java/AndroidManifest.xml       |   6 +
 .../java/res/drawable/wifi_auto_connect.xml   |  13 ++
 chrome/android/java/res/menu/main_menu.xml    |   3 +
 .../mauve/agregore/mobile/IPFSService.java    |   7 +
 .../mauve/agregore/mobile/IPFSStarter.java    |   4 +
 .../chrome/browser/ChromeTabbedActivity.java  |  23 ++
 .../chrome/browser/app/ChromeActivity.java    |  34 +++
 .../strings/android_chrome_strings.grd        |   3 +
 third_party/wifi_autoconnect/BUILD.gn         |   9 +
 third_party/wifi_autoconnect/LICENSE          | 201 ++++++++++++++++++
 third_party/wifi_autoconnect/OWNERS           |   2 +
 third_party/wifi_autoconnect/README.chromium  |   3 +
 .../wifi_autoconnect/WifiAutoConnect.info     |  14 ++
 .../wifi_autoconnect/WifiAutoconnect.aar      | Bin 0 -> 14042 bytes
 third_party/wifi_autoconnect/cipd.yaml        |   4 +
 19 files changed, 335 insertions(+), 2 deletions(-)
 create mode 100644 chrome/android/java/res/drawable/wifi_auto_connect.xml
 create mode 100644 third_party/wifi_autoconnect/BUILD.gn
 create mode 100644 third_party/wifi_autoconnect/LICENSE
 create mode 100644 third_party/wifi_autoconnect/OWNERS
 create mode 100644 third_party/wifi_autoconnect/README.chromium
 create mode 100644 third_party/wifi_autoconnect/WifiAutoConnect.info
 create mode 100644 third_party/wifi_autoconnect/WifiAutoconnect.aar
 create mode 100644 third_party/wifi_autoconnect/cipd.yaml

diff --git a/.gitignore b/.gitignore
index 52f5a6157a..de6fe1c969 100644
--- a/.gitignore
+++ b/.gitignore
@@ -340,3 +340,5 @@ vs-chromium-project.txt
 
 # Ignore agregore gateway binary since it's downloaded outside of git
 third_party/agregore-ipfs-daemon/agregore-ipfs-daemon.aar
+# Ignore wifi_autoconnect binary since it's downloaded outside of git
+third_party/wifi_autoconnect/WifiAutoConnect.aar
diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
index a75c19ef61..4a071c9127 100644
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -631,8 +631,9 @@ android_library("chrome_java") {
     "//third_party/blink/public/mojom:mojom_platform_java",
     "//third_party/gif_player:gif_player_java",
     "//third_party/metrics_proto:metrics_proto_java",
-    # Add Agregore IPFS gateway to chrome deps
+    # Add Agregore IPFS gateway and WifiAutoConnect to chrome deps
     "//third_party/agregore-ipfs-daemon:agregore_ipfs_daemon_java",
+    "//third_party/wifi_autoconnect:wifi_auto_connect_java",
     "//ui/android:ui_java",
     "//ui/base/mojom:mojom_java",
     "//ui/gfx/geometry/mojom:mojom_java",
diff --git a/chrome/android/chrome_java_resources.gni b/chrome/android/chrome_java_resources.gni
index d79b1e31eb..b19308135c 100644
--- a/chrome/android/chrome_java_resources.gni
+++ b/chrome/android/chrome_java_resources.gni
@@ -477,6 +477,7 @@ chrome_java_resources = [
   "java/res/drawable/tab_indicator.xml",
   "java/res/drawable/tile_view_hairline_border_background.xml",
   "java/res/drawable/toolbar_shadow.xml",
+  "java/res/drawable/wifi_auto_connect.xml",
   "java/res/drawable/virtual_card_enrollment_illustration.xml",
   "java/res/layout-sw360dp/preference_spinner_single_line.xml",
   "java/res/layout-sw600dp/find_toolbar.xml",
diff --git a/chrome/android/chrome_public_apk_tmpl.gni b/chrome/android/chrome_public_apk_tmpl.gni
index 011248d364..511d85db1a 100644
--- a/chrome/android/chrome_public_apk_tmpl.gni
+++ b/chrome/android/chrome_public_apk_tmpl.gni
@@ -190,7 +190,10 @@ template("chrome_public_common_apk_or_module_tmpl") {
     _material_package = "*com_google_android_material*"
 
     # Agregore resources
-    deps += [ "//third_party/agregore-ipfs-daemon:agregore_ipfs_daemon_java" ]
+    deps += [
+      "//third_party/agregore-ipfs-daemon:agregore_ipfs_daemon_java",
+      "//third_party/wifi_autoconnect:wifi_auto_connect_java"
+    ]
     if (!defined(loadable_modules)) {
       loadable_modules = []
     }
diff --git a/chrome/android/java/AndroidManifest.xml b/chrome/android/java/AndroidManifest.xml
index 1278803e28..9d36f4ce12 100644
--- a/chrome/android/java/AndroidManifest.xml
+++ b/chrome/android/java/AndroidManifest.xml
@@ -29,6 +29,12 @@ by a child template that "extends" this file.
 
     <!-- Required for local peer discovery -->
     <uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" />
+    <uses-permission android:name="android.permission.NEARBY_WIFI_DEVICES"
+                     android:usesPermissionFlags="neverForLocation"
+                     android:maxSdkVersion="32" />
+
+    <!-- Required to set up wifi auto connect hotspots -->
+    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
 
     <!--
       Enable runtime permissions as uses-permission in tip of tree builds
diff --git a/chrome/android/java/res/drawable/wifi_auto_connect.xml b/chrome/android/java/res/drawable/wifi_auto_connect.xml
new file mode 100644
index 0000000000..39f33575c2
--- /dev/null
+++ b/chrome/android/java/res/drawable/wifi_auto_connect.xml
@@ -0,0 +1,13 @@
+<vector
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:name="vector"
+    android:width="512dp"
+    android:height="512dp"
+    android:viewportWidth="512"
+    android:viewportHeight="512">
+    <path
+        android:name="path"
+        android:pathData="M 380.6 365.6 C 401.1 379.9 416 404.3 416 432 C 416 476.2 380.2 512 336 512 C 291.8 512 256 476.2 256 432 C 256 423.6 257.3 415.4 259.7 407.8 L 114.1 280.4 C 103.8 285.3 92.21 288 80 288 C 35.82 288 0 252.2 0 208 C 0 163.8 35.82 128 80 128 C 101.9 128 121.7 136.8 136.2 151.1 L 320 77.52 C 321.3 34.48 356.6 0 400 0 C 444.2 0 480 35.82 480 80 C 480 117.9 453.7 149.6 418.4 157.9 L 380.6 365.6 Z M 156.3 232.2 L 301.9 359.6 C 306.9 357.3 312.1 355.4 317.6 354.1 L 355.4 146.4 C 351.2 143.6 347.4 140.4 343.8 136.9 L 159.1 210.5 C 159.7 218 158.5 225.3 156.3 232.2 Z"
+        android:fillColor="#000"
+        android:strokeWidth="1"/>
+</vector>
diff --git a/chrome/android/java/res/menu/main_menu.xml b/chrome/android/java/res/menu/main_menu.xml
index 2e820d1d31..1c773afae2 100644
--- a/chrome/android/java/res/menu/main_menu.xml
+++ b/chrome/android/java/res/menu/main_menu.xml
@@ -35,6 +35,9 @@
                 android:icon="@drawable/btn_reload_stop"/>
             </menu>
         </item>
+        <item android:id="@+id/wifi_auto_connect_id"
+            android:title="@string/wifi_auto_connect"
+            android:icon="@drawable/wifi_auto_connect" />
         <item android:id="@+id/update_menu_id"
             android:title="@string/menu_update"
             android:icon="@drawable/menu_update" />
diff --git a/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSService.java b/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSService.java
index a3efe3a500..2dab7a4230 100644
--- a/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSService.java
+++ b/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSService.java
@@ -31,6 +31,7 @@ public class IPFSService extends Service implements Handler.Callback {
 	*/
 	public static final int START = 1;
 	public static final int STOP = 2;
+	public static final int RESTART = 3;
 
 	private Messenger messenger;
 	private WifiManager wifiManager = null;
@@ -46,6 +47,12 @@ public class IPFSService extends Service implements Handler.Callback {
 		} else if(what == STOP) {
 				stopProcess();
 				return true;
+		} else if(what = RESTART) {
+			if(isRunning()) {
+				stopProcess();
+			}
+			startProcess();
+			return true;
 		} else {
 				Log.d(TAG, "Got unknown message type.");
 		}
diff --git a/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSStarter.java b/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSStarter.java
index 1e13a955e4..a9bf3ca01e 100644
--- a/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSStarter.java
+++ b/chrome/android/java/src/moe/mauve/agregore/mobile/IPFSStarter.java
@@ -69,6 +69,10 @@ public class IPFSStarter {
 		this.sendMessage(IPFSService.STOP);
 	}
 
+	public void restartGateway() {
+		this.sendMessage(IPFSService.RESTART);
+	}
+
 	public void loadService(Context binder) {
 		loadService(binder, false);
 	}
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
index 699bd11bf1..1c4ac4d607 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
@@ -19,6 +19,7 @@ import android.util.Pair;
 import android.view.KeyEvent;
 import android.view.KeyboardShortcutGroup;
 import android.view.Menu;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.ViewConfiguration;
@@ -217,6 +218,8 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Locale;
 
+import moe.mauve.agregore.wifiautoconnect.WifiAutoConnect;
+
 import org.chromium.chrome.browser.ApplicationLifetime;
 
 /**
@@ -2023,6 +2026,20 @@ public class ChromeTabbedActivity extends ChromeActivity<ChromeActivityComponent
         getTabModelSelector().getModel(true).closeAllTabs();
     }
 
+    @Override
+    public void onWifiAutoConnectStateChange(int state) {
+        MenuItem item = (MenuItem) findViewById(R.id.new_tab_menu_id);
+        if(state == WifiAutoConnect.STATE_CONNECTING) {
+            item.setTitle("Connecting...");
+        } else if(state == WifiAutoConnect.STATE_CONNECTED) {
+            item.setTitle("Connected");
+        } if(state == WifiAutoConnect.STATE_DISCONNECTED) {
+            item.setTitle("Disconnected");
+        } if(state == WifiAutoConnect.STATE_ERROR) {
+            item.setTitle("Error Connecting");
+        }
+    }
+
     @Override
     public boolean onMenuOrKeyboardAction(final int id, boolean fromMenu) {
         final Tab currentTab = getActivityTab();
@@ -2104,6 +2121,12 @@ public class ChromeTabbedActivity extends ChromeActivity<ChromeActivityComponent
             RecordUserAction.record("MobileTabClosed");
         } else if (id == R.id.exit_id) {
             ApplicationLifetime.terminate(false);
+        } else if (id == R.id.wifi_auto_connect_id) {
+           if (isWifiConnected()) {
+               disconnectWifi();
+           } else {
+               autoConnectWifi();
+           }
         } else if (id == R.id.close_all_tabs_menu_id) {
             if (ChromeFeatureList.isEnabled(ChromeFeatureList.CLOSE_ALL_TABS_MODAL_DIALOG)) {
                 CloseAllTabsDialog.show(this, getModalDialogManagerSupplier(),
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
index aa0f279dff..4c8eebd785 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
@@ -257,6 +257,7 @@ import java.util.List;
 import java.util.function.Consumer;
 
 import moe.mauve.agregore.mobile.IPFSStarter;
+import moe.mauve.agregore.wifiautoconnect.WifiAutoConnect;
 
 /**
  * A {@link AsyncInitializationActivity} that builds and manages a {@link CompositorViewHolder}
@@ -402,12 +403,26 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
 
     // Agregore related variables
     private IPFSStarter ipfs = new IPFSStarter();
+    private WifiAutoConnect wifiAutoConnect;
 
     protected ChromeActivity() {
         mIntentHandler = new IntentHandler(this, createIntentHandlerDelegate());
         mManualFillingComponentSupplier.set(ManualFillingComponentFactory.createComponent());
     }
 
+    // Callback that gets invoked when the wifi state changes
+    public void onWifiAutoConnectStateChange(int state) {}
+    public void autoConnectWifi() {
+        wifiAutoConnect.autoConnect();
+    }
+    public void disconnectWifi() {
+        wifiAutoConnect.disconnect();
+    }
+    public boolean isWifiConnected() {
+        if (wifiAutoConnect == null) return false;
+        return wifiAutoConnect.getState() == WifiAutoConnect.STATE_CONNECTED;
+    }
+
     @Override
     protected void onPreCreate() {
         CachedFeatureFlags.onStartOrResumeCheckpoint();
@@ -1157,6 +1172,8 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         }
         VrModuleProvider.getDelegate().maybeRegisterVrEntryHook(this);
 
+        wifiAutoConnect.onResume();
+
         getManualFillingComponent().onResume();
     }
 
@@ -1218,6 +1235,8 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         if (tab != null) getTabContentManager().cacheTabThumbnail(tab);
         getManualFillingComponent().onPause();
 
+        wifiAutoConnect.onPause()
+
         VrModuleProvider.getDelegate().maybeUnregisterVrEntryHook();
         markSessionEnd();
 
@@ -1317,6 +1336,17 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
 
             // Load IPFS service and autostart the gateway
             ipfs.loadService(this, true);
+            wifiAutoConnect = new WifiAutoConnect(this);
+            wifiAutoConnect.setStateChangeListener(new WifiAutoConnect.WifiAutoConnectStateChangeListener(){
+                @Override
+                public void onStateChange(int state) {
+                    if(state == WifiAutoConnect.STATE_CONNECTED || state == WifiAutoConnect.STATE_DISCONNECTED) {
+                        ipfs.restartGateway();
+                    }
+                    onWifiAutoConnectStateChange(state);
+                }
+            });
+
 
             FontSizePrefs.getInstance(Profile.getLastUsedRegularProfile())
                     .recordUserFontPrefOnStartup();
@@ -1578,6 +1608,10 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         if (ipfs.isBound()) {
             ipfs.unloadService();
         }
+        // Disconnect and destroy wifi access point if one exists
+        if (wifiAutoConnect !== null) {
+            disconnectWifi();
+        }
 
         super.onDestroy();
     }
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings.grd b/chrome/browser/ui/android/strings/android_chrome_strings.grd
index e2a5bc0966..36d01e0a13 100644
--- a/chrome/browser/ui/android/strings/android_chrome_strings.grd
+++ b/chrome/browser/ui/android/strings/android_chrome_strings.grd
@@ -3461,6 +3461,9 @@ To change this setting, <ph name="BEGIN_LINK">&lt;resetlink&gt;</ph>reset sync<p
       <message name="IDS_MENU_BOOKMARK_ALL_TABS" desc="Menu item to bookmark all tabs. [CHAR-LIMIT=27]">
         Bookmark all tabs
       </message>
+      <message name="IDS_MENU_AUTO_CONNECT" desc="Menu item to automatically connect to nearby devices. [CHAR-LIMIT=27]>
+        Auto-connect nearby devices
+      </message>
       <message name="IDS_MENU_GET_IMAGE_DESCRIPTIONS" desc="Menu item to start getting alt text accessibility image labels/descriptions [CHAR_LIMIT=27]">
         Get image descriptions
       </message>
diff --git a/third_party/wifi_autoconnect/BUILD.gn b/third_party/wifi_autoconnect/BUILD.gn
new file mode 100644
index 0000000000..75ddef7ebb
--- /dev/null
+++ b/third_party/wifi_autoconnect/BUILD.gn
@@ -0,0 +1,9 @@
+# Wifi Auto Connect
+
+import("//build/config/android/rules.gni")
+
+android_aar_prebuilt("wifi_auto_connect_java") {
+  aar_path = "WifiAutoConnect.aar"
+  info_path = "WifiAutoConnect.info"
+  extract_native_libraries = true
+}
diff --git a/third_party/wifi_autoconnect/LICENSE b/third_party/wifi_autoconnect/LICENSE
new file mode 100644
index 0000000000..261eeb9e9f
--- /dev/null
+++ b/third_party/wifi_autoconnect/LICENSE
@@ -0,0 +1,201 @@
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git a/third_party/wifi_autoconnect/OWNERS b/third_party/wifi_autoconnect/OWNERS
new file mode 100644
index 0000000000..08e303b54b
--- /dev/null
+++ b/third_party/wifi_autoconnect/OWNERS
@@ -0,0 +1,2 @@
+# For changes and questions
+contact@mauve.moe
diff --git a/third_party/wifi_autoconnect/README.chromium b/third_party/wifi_autoconnect/README.chromium
new file mode 100644
index 0000000000..dcb0448ccb
--- /dev/null
+++ b/third_party/wifi_autoconnect/README.chromium
@@ -0,0 +1,3 @@
+# Wifi Auto Connect
+
+https://github.com/RangerMauve/WifiAutoConnect-Android
diff --git a/third_party/wifi_autoconnect/WifiAutoConnect.info b/third_party/wifi_autoconnect/WifiAutoConnect.info
new file mode 100644
index 0000000000..18089ec31d
--- /dev/null
+++ b/third_party/wifi_autoconnect/WifiAutoConnect.info
@@ -0,0 +1,14 @@
+# Generated by //build/android/gyp/aar.py
+# To regenerate, use "update_android_aar_prebuilts = true" and run "gn gen".
+
+aidl = []
+assets = []
+has_classes_jar = true
+has_native_libraries = false
+has_proguard_flags = true
+has_r_text_file = false
+is_manifest_empty = true
+manifest_package = "moe.mauve.agregore.wifiautoconnect"
+resources = []
+subjar_tuples = []
+subjars = []
diff --git a/third_party/wifi_autoconnect/WifiAutoconnect.aar b/third_party/wifi_autoconnect/WifiAutoconnect.aar
new file mode 100644
index 0000000000000000000000000000000000000000..9b08d9298555680c38fd8debf4c00e2c5eb75e4c
GIT binary patch
literal 14042
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
I|8@F*0O0$bwEzGB

literal 0
HcmV?d00001

diff --git a/third_party/wifi_autoconnect/cipd.yaml b/third_party/wifi_autoconnect/cipd.yaml
new file mode 100644
index 0000000000..d209c96027
--- /dev/null
+++ b/third_party/wifi_autoconnect/cipd.yaml
@@ -0,0 +1,4 @@
+package: chromium/third_party/wifi_autoconnect
+description: Wifi AutoConnect Android
+data:
+  - file: "WifiAutoConnect.aar"
-- 
2.34.1

